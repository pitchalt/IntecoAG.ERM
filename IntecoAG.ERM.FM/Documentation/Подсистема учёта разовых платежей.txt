0.1 Подсистема учёта разовых платежей

0.2 Типы служебных записок

• Командировочные

• Бюджетные (налоговые)

• Перечисления на базы

• Зарплата

• Прочее

0.3 Структура классов

0.3.1 Пространство имён

Для подсистемы служебных записок выделяется своё пространство 
имён: IntecoAG.ERM.FM.MemorandumRequest

0.3.2 Подструктура проекта и список классов

В проекте IntecoAG.ERM.FM организуется каталог 
BusinessObjects\MemorandumRequest, содержащий классы:

• fmCPRMemorandumRequest - абстрактный - все общие свойства любых 
  видов служебных записок.

• fmCPRMemorandumRequestCom - командировочные.

• fmCPRMemorandumRequestBN - Бюджетные (налоговые)

• fmCPRMemorandumRequestPB - Перечисления на базы

• fmCPRMemorandumRequestZP - Зарплата

• fmCPRMemorandumRequestOther - Прочее

Подход с классами для каждого типа служебных записок позволит 
иметь кнопку с выпадающим списком списком по типам записок и 
разграничить шаблоны по типам записок.

0.3.3 Реализация механизма шаблонов

Шаблоны от типов документов отличаются тем, что типы (п. 0.2) 
задают структуру документа, т.е. набор свойств, а шаблоны задают 
содержимое свойств для выбранного типа.

Видятся по крайне мере четыре способа реализации механизма 
шаблонов.

1. Шаблон - это обычный документ того или иного типа, имеющий 
(булевский) признак шаблона. Отрицательная сторона этого подхода 
состоит в том, что этот признак надо постоянно учитывать при всех 
операциях и при всех настройках.

2. Шаблон - это отдельный класс, порождённый от того же класса, 
что и сами документы. При таком подходе бизнес-процессы, 
связанные с документами будут отделены от процессов с шаблонами, 
а отрицательным моментом будет необходимость поддерживать 
отдельные классы и операции с ними.

3. Шаблон - это обычный документ, имеющий статус “Шаблон”. 
Удобство этого подхода в том, что все свойства и все методы 
содержатся в одном классе. Не затрагивается бизнес-логика 
перехода по статусам, т.к. граф переходов будет состоять из двух 
компонент, имеющих только одну общую вершину “Новый”. Фрагмент 
графа переходов: “Новый” --> “Шаблон”, из состояния “Шаблон” 
документ может быть только логически (физически) удалён. Но при 
настройках представлений и в ряде операций над документами будет 
требоваться проверка статуса “Шаблон”. Класс служебной записки 
fmCPRMemorandumRequest имеет свойство Template типа 
fmCPRMemorandumRequest. Это свойство имеет надлежащий фильтр, 
который позволяет выделить только шаблоны того же типа, что и 
сама созданная служебная записка. При выборе элемента в этом 
списке, в созданном документе заполняются соответствующие поля.

4. Под шаблоном можно понимать любую служебную записку. В этом 
смысле выбранная служебная записка является просто основой для 
создания новой служебной записки. Тут нужен только механизм 
поиска подходящего образца. При таком варианте нет необходимости 
ни в каких статусах, признаках шаблона или дополнительных 
классах.

3-й вариант реализации шаблонов можно принять к исполнению.

Создание шаблона происходит таким образом, что после сохранения 
нового документа как шаблона все его поля становятся недоступными 
для редактирования пользователями (кроме ответственного или 
создателя шаблона) и при создании документа на основе данного 
шаблона в документ копируются эти поля.

Среди свойств класса должна быть группа свойств (кроме случая 
4-го варианта), отвечающих за параметры шаблона: наименование 
шаблона, его описание, создатель (или владелец).

0.3.4 Отражение в регистрах

Операции со служебными записками, имеющие финансовый смысл, 
отражаются в регистре движения денег (CashFlow).

0.4 Фрагмент руководства пользователя при работе со служебными 
  записками.

Пользователь выбирает в Навигаторе пункт “Служебная записка”. 
Открывается список Служебных записок. В этом списке нажимает 
кнопку “Создать”, в выпадающем на кнопке списке типов служебных 
записок пользователь выбирает подходящий, создаётся новая 
служебная записка выбранного типа. В документе пользователь видит 
поле Шаблон, выбирает (или не выбирает) элемент в выпадающем 
списке и поля документа заполняются соответственно с его выбором. 
Созданный документ пользователь может сохранить как шаблон, нажав 
на кнопку Сохранить как шаблон. Список служебных записок имеет 
фильтр (заданный в модели), фильтр имеет пункт посмотреть шаблоны 
и соответственно, это позволяет их отредактировать (тем, кто 
имеет права).

