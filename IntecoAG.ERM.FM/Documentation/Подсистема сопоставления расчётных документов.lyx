#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection*
Подсистема сопоставления документов типа DocRCB и документов, импортированных
 из выписок.
\end_layout

\begin_layout Standard
Обработка файла выписок включает в себя следующие действия.
\end_layout

\begin_layout Enumerate
Загрузка файла в систему.
 На этом этапе устанавливаются первичные связи между объектами системы,
 участвующими в загрузке:
\end_layout

\begin_deeper
\begin_layout Enumerate
Реквизиты сторон связываются с соответствующим документом выписки.
\end_layout

\begin_layout Enumerate
Объект выписки связывается с реквизитами сторон в документах выписки.
\end_layout

\begin_layout Enumerate
Объект выписки связывается с Задачей обработки выписки.
 Задача содержит указание на банк, из чего следует, что счета в выписках
 относятся к этому банку.
\end_layout

\begin_layout Enumerate
Связываются объект Выписка с объектом Расчётный счёт.
\end_layout

\begin_deeper
\begin_layout Enumerate
Если Расчётный счёт не найден для Выписки, то постобработка всего импорта
 не производится.
\end_layout

\begin_layout Enumerate
Если хотя бы одна Выписка не привязалась к Расчётному счёту (это возможно
 при неверном указании Банка в Задаче импорта), то пользователю предоставляется
 возможность из режима просмотра Результата импорта перейти в режим создания
 расчётных счетов Банка для 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

 организации.
 ЭТО ЖЕЛАТЕЛЬНО, НО СЕЙЧАС НЕ ДЕЛАТЬ!
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Автоматическая обработка результатов загрузки с целью сопоставления банков,
 счетов и сторон документа выписки с соответствующими объектами системы.
 Результатом этого этапа является образование совокупности платёжных документов,
 сопоставленных документам выписок.
\end_layout

\begin_layout Enumerate
Автоматическая обработка результатов загрузки с целью сопоставления заявок
 на оплату с платёжными документами.
\end_layout

\begin_layout Standard
Замечания о свойствах документа выписки.
\end_layout

\begin_layout Itemize
По крайней мере одна из сторон (плательщик или получатель) является 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

 организацией.
 
\begin_inset Quotes eld
\end_inset

Нашей
\begin_inset Quotes erd
\end_inset

 организацией могут быть обе стороны.
 Под 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

 понимается организация, счёт которой находится в списке счетов секции 
\begin_inset Quotes eld
\end_inset

Секция передачи остатков по расчетному счету
\begin_inset Quotes erd
\end_inset

 импортируемого файла (банк известен из параметров задачи импорта).
\end_layout

\begin_layout Standard
Постобработка загруженных документов означает:
\end_layout

\begin_layout Enumerate
В первую очередь определение банков в документах выписки.
\end_layout

\begin_layout Enumerate
Затем определение контрагентов в документах выписки.
\end_layout

\begin_layout Enumerate
Конечным результатом постобработки на этапах 1 и 2 считается появление (создание
 в случае необходимости) в системе платёжных документов типа DocRCB для
 всех документов выписок.
\end_layout

\begin_layout Enumerate
Сопоставление и погашение заявок на оплату документами выписок.
 Под погашением понимается отметка о полной оплате заявки на основании информаци
и об оплатах, поступающей из банка.
 Информация группируется в так называемые выписки.
 Заявка может быть оплачена по частям и информация о её оплате может попасть
 в разные выписки.
 Возможен случай, когда банк для удобства группДокументы выписки обрабатываются
 по отдельности.
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Замечание.
 После обработки очередного документа, результаты немедленно сохраняются
 в БД на каждом этапе.
\end_layout

\end_deeper
\begin_layout Standard
Алгоритм.
\end_layout

\begin_layout Enumerate
В первую очередь определяются банки, для плательщика и для получателя -
 алгоритм одинаковый.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
БИК указан.
 Производится поиск по БИК среди банков, зарегистрированных в системе.
\end_layout

\begin_deeper
\begin_layout Enumerate
Банк найден в системе.
 Тогда он привязывается (т.е.
 означивается свойство Банк в объекте реквизитов контрагента).
 
\end_layout

\begin_layout Enumerate
Банк в системе не найден.
 Тогда он создаётся с теми свойствами, которые можно извлечь из документа
 выписки.
\end_layout

\end_deeper
\begin_layout Enumerate
БИК не указан.
 Возможен способ определения по счёту.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
ТРЕБУЕТСЯ ДОРАБОТКА.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Во вторую очередь производится определение стороны как предпочтительной
 стороны по банку и счёту из BankAccount.
 При наличии заданных ИНН и КПП производится контрольная проверка равенства
 реквизитов ИНН и КПП предпочтительной стороны и указанных в документе,
 также проверяется, чтобы предпочтительная сторона не была закрытой.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Предпочтительная сторона закрыта.
 В этом случае действует правило для случая, когда сторона вовсе не определилась
 (обрабатывается далее по п.
 3).
\end_layout

\begin_layout Enumerate
Предпочтительная сторона не закрыта.
\end_layout

\begin_deeper
\begin_layout Enumerate
Реквизиты (ИНН и КПП) предпочтительной стороны совпадают с реквизитами из
 документа выписки.
 Ничего не делается.
\end_layout

\begin_layout Enumerate
Предпочтительная сторона не совпадает с той, что получена из реквизитов
 стороны документа выписки (обрабатывается далее по п.
 3).
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Далее определяются ещё не доопределённые на шаге 2 стороны - плательщик
 и получатель.
 Возможности определения по счёту и банку исчерпаны на шаге 2.
 Возможные варианты: определение с использованием ИНН и КПП, косвенное определен
ие, т.е.
 если дуальная сторона определена и не является 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

, то сторона, которая обрабатывается - 
\begin_inset Quotes eld
\end_inset

наша
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Enumerate
ИНН задан.
\end_layout

\begin_deeper
\begin_layout Enumerate
ИНН имеет 10 знаков.
\end_layout

\begin_deeper
\begin_layout Enumerate
КПП задан.
\end_layout

\begin_deeper
\begin_layout Enumerate
Нашлась сторона по совокупности ИНН и КПП.
 Она используется в качестве стороны в обрабатываемых реквизитах.
\end_layout

\begin_layout Enumerate
Не нашлась сторона по совокупности ИНН и КПП.
 Ищется юридическое лицо с указанным ИНН.
\end_layout

\begin_deeper
\begin_layout Enumerate
Юридическое лицо нашлось, тогда создаётся его филиал с указанным КПП.
 Ставится отметка о необходимости ручной обработки филиала (алреса и т.д.).
\end_layout

\begin_layout Enumerate
Юридическое лицо не нашлось.
 Тогда создаётся OtherParty и используется в реквизитах в качестве стороны
 документа выписки.
 При этом ставится отметка о необходимости ручной обработки.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
КПП не задан.
 В этом случае создаётся OtherParty и используется в качестве стороны.
 При этом ставится отметка о необходимости ручной обработки.
\end_layout

\end_deeper
\begin_layout Enumerate
ИНН имеет 12 знаков.
 Это указание на частного предпринимателя или на физическое лицо.
\end_layout

\begin_deeper
\begin_layout Enumerate
Частный предприниматель нашёлся в системе.
 Тогда он используется в качесттве стороны в обрабатываемых реквизитах.
\end_layout

\begin_layout Enumerate
Частный предприниматель не наНеобходимо определить адресшёлся в системе.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Найдено физическое лицо с данным ИНН.
 Оно назаначается стороной в реквизитах.
\end_layout

\begin_layout Enumerate
Не найдено физическое лицо, тогда ставится отметка о необходимости ручной
 обработки документа выписки.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
ИНН не задан.
 ИССЛЕДОВАТЬ В ФАЙЛЕ.
\end_layout

\begin_deeper
\begin_layout Enumerate
Дуальная сторона не определена.
\end_layout

\begin_deeper
\begin_layout Enumerate
Дуальная сторона определилась и не является 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

, тогда см.
 п .
 3.b.i
\end_layout

\begin_layout Enumerate
Дуальная сторона определилась и является 
\begin_inset Quotes eld
\end_inset

нашей
\begin_inset Quotes erd
\end_inset

, тогда создаётся OtherParty с пометкой о необходимости ручной обработки.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Если сторона определиласьПредпочтительная сторона закрыта, исследуется Расчётный
 счёт.
 В первую очередь определение банков в документах выпискиа его наличие в
 системе, т.е.
 в таблице BankAccount.
 Если Расчётного счёта нет, то
\end_layout

\begin_deeper
\begin_layout Enumerate
Имеются все данные для его создания Необходимо определить адреся, то он
 создаётся.
\end_layout

\begin_layout Enumerate
Нет достаточного набора данных (банк, номер счёта, персона, предпочтительную
 партию не заполнять!).
 Делается запись в журнал импорта, ставится отметка о необходимости ручной
 обработки.
\end_layout

\end_deeper
\begin_layout Enumerate
Другие аналитики (доработать).
\end_layout

\end_deeper
\begin_layout Enumerate
Сопоставление или создание платёжных документов для документов выписок.
 Поиск платёжных документов происходит за ряд этапов.
 На каждом этапе рассматриваются только те объекты, которые не были связаны
 на предыдущем этапе.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Этап 1.
 Перебор всех платёжных документов с целю выявления соответствующих им документо
в выписок.
\end_layout

\begin_deeper
\begin_layout Enumerate
Для каждого документа выписки ищется платёжный документ по следующей совокупност
и условий - совпадают следующие значения в платёжном документе и документе
 выписки:
\end_layout

\begin_deeper
\begin_layout Enumerate
Номера.
\end_layout

\begin_layout Enumerate
Суммы.
\end_layout

\begin_layout Enumerate
Банки.
\end_layout

\begin_layout Enumerate
Даты 
\end_layout

\begin_layout Enumerate
Кроме того, нашёлся только один документ выписки для данного платёжного
 документа.
 Документ выписки связывается с Платёжным документом (ссылка).
\end_layout

\end_deeper
\begin_layout Enumerate
Если сопоставление случилось, то NOP.
\end_layout

\begin_layout Enumerate
Если сопоставление не случилось, обработка переносится на ручной этап.
\end_layout

\end_deeper
\begin_layout Enumerate
Этап 2.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Для каждого документа выписки ищется платёжный документ по следующей совокупност
и условий - совпадают следующие значения в платёжном документе и документе
 выписки:
\end_layout

\begin_deeper
\begin_layout Enumerate
Номера.
\end_layout

\begin_layout Enumerate
Банки.
\end_layout

\begin_layout Enumerate
Даты 
\end_layout

\begin_layout Enumerate
Сумма сумм найденных по условиям A.-C.
 документов выписок не должна превышать сумму в платёжном документе.
 Документ выписки связывается с Платёжным документом (ссылка).
\end_layout

\end_deeper
\begin_layout Enumerate
Если сопоставление случилось, то NOP.
\end_layout

\begin_layout Enumerate
Если сопоставление не случилось, обработка переносится на ручной этап.
\end_layout

\end_deeper
\begin_layout Enumerate
Этап 3.
 Для каждого документа выписки, оставшегося не связанным с платёжным документом,
 формируеся платёжный документ соответствующего типа (Платёжное поручение,
 ..., Прочие).
\end_layout

\end_deeper
\begin_layout Enumerate
Работа оператора.
 Оператору предоставляется форма для ручного сопоставления платёжных документов
 и документов выписок.
\end_layout

\begin_deeper
\begin_layout Enumerate
Оператор выбирает из списка непогашенный Платёжный документ (Заявку на оплату
 ?).
 Ему виден набор документов выписок.
 Он указывает те из них, которые ассоциируются с Платёжным документом и
 подтверждает свой выбор.
 В результате в Регистр заносится информация об этом Платёжном документе,
 в документах выписок ставится ссылка на Платёжный документ и в Регистр
 заносится информаци из отмеченных документов выписок.
\end_layout

\begin_layout Enumerate
Форма обновляется и снова повторяются дейтсвия п (a).
\end_layout

\begin_layout Enumerate
Если после ручнй обработки остались непогашенные документы выписок, то для
 них создаются задачи типа 
\begin_inset Quotes eld
\end_inset

Неопознанный (непредвиденный) платёж
\begin_inset Quotes erd
\end_inset

 с сооветствующим типом общего документа.
 Этот документ становится виден Бюджетному и/или Договорному и/или Плановому
 отделам.
\end_layout

\end_deeper
\begin_layout Subsection*
Замечания об особенностях заполнения банками полей документов выписок.
\end_layout

\begin_layout Enumerate
Сбербанк.
\end_layout

\begin_deeper
\begin_layout Enumerate
Незаполненный ИНН встречается, по наблюдениям, только в Мемориальном ордере.
 
\end_layout

\begin_layout Enumerate
Если ПлательщикИНН задан и ПолучательИНН не задан, то сумма < 0.
\end_layout

\begin_layout Enumerate
Если ПолучательИНН задан и ПлательщикИНН не задан, то сумма > 0.
\end_layout

\end_deeper
\begin_layout Enumerate
НМБ
\end_layout

\begin_deeper
\begin_layout Enumerate
Незаполненность ИНН обозначается как 0000000000.
 Это имеет место, например, если банк принадлежит Казахстану.
\end_layout

\begin_layout Enumerate
В Банковском ордере заполнены оба - ПлательщикИНН и ПолучательИНН - и они
 разные, при этом БИК указывается одинаковый.
 Сумма, по наблюдениям, указывается всегда > 0.
\end_layout

\end_deeper
\begin_layout Subsection*
Оценка результатов импорта.
\end_layout

\begin_layout Enumerate
Банки распознаются и создаются.
 
\end_layout

\begin_layout Enumerate
Частные предприниматели, физические лица, как правило, распознаются..
\end_layout

\begin_layout Enumerate
Филиалы создаются для юридических лиц, но если само лицо не имеет КПП,возникает
 ошибка сохранения, т.к.
 наличие КПП проверяется в контексте валидации Save.
\end_layout

\begin_layout Enumerate
Для Сбербанка.
 Всего записей реквизитов 2384.
 Из них:
\end_layout

\begin_deeper
\begin_layout Enumerate
1820 определились с кодом 0, т.е.
 без сообщений об ошибках.
\end_layout

\begin_layout Enumerate
125 - Предпочтительная сторона не сопадает с заданной по ИНН и КПП (но здесь
 я мог что-то неправильно ввести в качестве предпочтительной стороны)
\end_layout

\begin_layout Enumerate
261 - Необходимо доопределить адрес
\end_layout

\begin_layout Enumerate
128 - Доопределить недостающие объекты и создать расчётный счёт и Сторона
 не определена и Не найдено юридическое лицо
\end_layout

\begin_layout Enumerate
42 - Не задано КПП и Доопределить недостающие объекты и создать расчётный
 счёт
\end_layout

\begin_layout Enumerate
3 - Доопределить недостающие объекты и создать расчётный счёт и Физическая
 сторона не устанволена
\end_layout

\begin_layout Enumerate
4 - Доопределить адрес и Юридическое лицо не имеет KPP, а оно обязательно
 при сохранении
\end_layout

\end_deeper
\begin_layout Subsection*
На будущее
\end_layout

\begin_layout Enumerate
Структура 
\begin_inset Quotes eld
\end_inset

Регистра погашения Заявок на оплату
\begin_inset Quotes erd
\end_inset

 (далее просто Регистр).
 Регистр используется, например, в подсистеме ручного сопоставления счетов.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Платёжный документ
\end_layout

\begin_layout Enumerate
Заявка на оплату
\end_layout

\end_deeper
\begin_layout Subsection*
Описание системы работы оператора по сопоставлению Платёжных документов
 и Заявок на оплату.
\end_layout

\begin_layout Standard
Задача.
 Описать интерфейс пользователя и элементы XAF, которые данную задачу решают.
\end_layout

\begin_layout Standard
Пользователь видит результат импорта и вложенный список Выписок.
 Имеется кнопка автоматической привязки (то, что возможно сделать автоматически)
 - контроллер fmCSARepaymentStatementAccountViewController.
\end_layout

\begin_layout Standard
Выбирает выписку и открывает её в отдельной вкладке.
\end_layout

\begin_layout Standard
Пользователь видит список документов выписки, для информации пользователя
 они имеют признак 
\begin_inset Quotes eld
\end_inset

покрытости
\begin_inset Quotes erd
\end_inset

.
 Кнопка btnRepaymentTask отрабатывает в любом случае.
 По ней создаётся и открывается RepaymentTask (с ним агрегирован список
 RepaymentTaskLine (см.
 таблицу на листе)) (контроллер fmCSAStatementAccountDocViewController,
 nested) в модальном окне.
 На этой форме представлены следующие элементы:
\end_layout

\begin_layout Itemize
список пар: а) Дата б) Сумма на эту даты.
 Список создаётся по регистру OperationJournal Для текущего Платёжного документа
\end_layout

\begin_layout Itemize
Список всех 
\begin_inset Quotes eld
\end_inset

релевантных
\begin_inset Quotes erd
\end_inset

 (имеющих статус к оплате и, возможно, другие фильтры...) Заявок для данного
 Платёжного документа
\end_layout

\begin_layout Itemize
Список всех уже привязанных Заявок (Этот список реализуется особым регистром
 (fmCPRRepaymentJurnal): Заявка, Платёжка, Счёт, Дата когда операция прошла
 по счёту (см.
 список пар), СуммаIn, СуммаUT, Валюта), основание (RepaymentTask).
\end_layout

\begin_layout Standard
Кнопки (контроллер fmCPRRepaymentTaskViewController)
\end_layout

\begin_layout Itemize
Привязать: Пользователь выбрал Заявку из общего списка, нажал кнопку Привязать
 и в список всех уже привязанных попало произведение Выбранной заявки на
 список пар (которые ещё не попали в список привязки)
\end_layout

\begin_layout Itemize
Убрать привязку: откатывает привязку по кнопке Привязать (т.е.
 удаляет все образованные записи)
\end_layout

\begin_layout Itemize
Кнопка создать Заявку на финансовую операцию (По Ордерам идут операции финансово
го отдела (Плательщик = получатель).
 Комиссии банка - Мемориальные, банковские ордера и т.п.
 - по ним заявки на оплату не создаются - это финансовая операция.
 Межбанковская переброска денег (Это Платёжка).
 Создать особый тип Заявки на оплату (для общности алгоритма).
 Делается сразу со статусом 
\begin_inset Quotes eld
\end_inset

Закрыт
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Itemize
кнопка Создать непредвиденный платёж 
\end_layout

\begin_deeper
\begin_layout Itemize
Вычисляется сумма непредвиденного платёжа как разность суммы в оборотном
 регистре по данному Платёжному документу и сумма по уже привязанным Заявкам
\end_layout

\begin_layout Itemize
Создаётся объект Непредвиденный платёж с вычисленной суммой, прочими полями,
 которые можно извлечь из контекста и ссылкой на Платёжный документ
\end_layout

\end_deeper
\begin_layout Standard
OperationJournal делаем проекции (Дата, Плат док) с факторизацией (по дате,
 плат док) с подсчётами общих сумм - Это вставляется в таблицу (нарисована
 на листе).
 
\end_layout

\begin_layout Standard
RepaymentJournal делаем проекцию (Дате, Заявка, плат док), с факторизацией
 по (Дате, Заявка, плат док), с подсчётом общих сумм.
 Добавляем строчки в таблицу fmCPRRepaymentTaskLine (на листе) По следующим
 правилам.
\end_layout

\begin_layout Standard
Делаем постобработку этой совокупной таблицы:
\end_layout

\begin_layout Standard
находим строчку с комбинацией {Дата, Плат.
 Док., Заявка (пустая)}.
 Если не нашли, то добавить строчку с теми же полями, но без суммы (=0)
\end_layout

\begin_layout Standard
затем (строчка теперь точно есть) уменьшаем сумму в ней на сумму добавленной
 записи из RepaymentJournal
\end_layout

\begin_layout Standard
===================
\end_layout

\begin_layout Standard
Замечания Павла:
\end_layout

\begin_layout Standard
В авто биндинге следует опираться на PartySender или PartyReceiver и сумму
\end_layout

\begin_layout Standard
Не забыть:
\end_layout

\begin_layout Standard
- Написать код для кнопки в ImportResult автоматического создания заявок
 
\end_layout

\begin_layout Standard
===================
\end_layout

\begin_layout Standard
Функциональность пользовательского интерфейса по работе с привязкой Платёжного
 документа с Заявками.
 Привязка означает, что в таблице RepaymentJournal имеется хотя бы одна
 запись со ссылками на платёжку и заявку.
 Имеется ограничение: сумма по заявкам в RepaymentJournal для данной платёжки
 не должна превышать сумму в OperationJournal для той же платёжки
\end_layout

\begin_layout Standard
Задача подсистемы ручной привязки: показать пользователю последовательность
 оплат Платёжного документа документами выписки.
 Это значит, что пользователь видит на экране список документов выписок
 из OperationJournal отсортированных по датам с суммами.
 Суммы эти могут быть либо только суммами расхода, либо только суммами прихода.
 Пользователь также видит список всех подходящих заявок для данного платёжного
 документа.
 Подходимость заявки означает (а) совпадение нашей стороны со стороной Плательщи
ка, если Платёжка расходная и получателя, если платёжка приходная, (б) непревыше
ние её суммы (за минусом общей суммы по этой заявке, уже имеющейся в списках
 RepaymentTaskLine по всем Платёжкам) + общей суммы по списку RepaymentTaskLine
 суммы в OperationJournal, (в) отсутствие заявки в списке RepaymentTaskLine.
 В этом списке отсутствуют заявки, которые уже привязаны к обрабатываемой
 платёжке.
 Пользователь выбирает заявку из списка всех заявок и нажимет кнопку Привязать.
 Это приводит к переработке списка RepaymentTaskLine: в него добавляется
 как бы фиктивная, т.е.
 не пришедшая из OperationJournal, запись с нулевой суммой и пустой заявкой
 для той же даты, что у выбранной заявки, в случае если таковая дата отсутствует.
 Производится запись в RepaymentJournal и распределение суммы заявки по
 суммам документов выписки, начиная с самого старого документа.
 Это распределение отражается в таблице RepaymentTaskLine.
 Порядок действий такой.
 Выбирается 1-й документ выписки и вычисляется разность двух величин.
 Одна величина - это сумма в самом документе выписки, вторая величина -
 это сумма всех заявок уже привязанных к платёжному документу.
 Если первая величина не превышает вторую, то производится переход к следующему
 по молодости документу выписки в таблице RepaymentTaskLine.
 В противном случае вычисляется вычисляется разность D между этими величинами,
 т.е.
 сколько не достаёт от второй величины до первой.
 Если D меньше, чем сумма в выбранной заявке, то считаем, что Заявка реализована.
 Если D превышает сумму, то производится запись в RepaymentTaskLine для
 этой заявки и даты с суммой D и производится переход к следующему по молодости
 документу.
 Те же действия повторяются для него и с суммой Заявки, считаемой равной
 сумме заявки минус D.
 Так продолжается пока вся сумма заявки не будет исчерпана, т.е.
 D станет = 0.
\end_layout

\begin_layout Standard
Всё это реализуется в классе fmCPRRepaymentTask.ы
\end_layout

\end_body
\end_document
